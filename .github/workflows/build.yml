name: Build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches: ['**']
    tags: [v*]
  pull_request:
    branches: [main]
    types: [opened]
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: cargo check
      - run: cargo test
      - run: cargo bench
      - run: cargo fmt --check
      - run: cargo clippy
  crate:
    needs: [test]
    strategy:
      matrix:
        build:
          - x86_64-linux
          - aarch64-linux
          - riscv64-linux
          - x86_64-macos
          - aarch64-macos
          - x86_64-windows
        includes:
          # linux
          - build: x86_64-linux
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: aarch64-linux
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - build: riscv64-linux
            runner: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
          # macos
          - build: x86_64-macos
            runner: macos-latest
            target: x86_64-apple-darwin
          - build: aarch64-macos
            runner: macos-latest
            target: aarch64-apple-darwin
          # windows
          - build: x86_64-windows
            runner: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.runner }}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: freight-${{ github.head_ref || github.ref_name }}-${{ matrix.build }}
          path: |
            target/release/freight
            README.md
      - if: github.ref_type == 'tag'
        run: cargo publish
  image:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  release:
    runs-on: ubuntu-latest
    needs: [crate, image]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist/
      - uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          generate_release_notes: true
          files: dist/*