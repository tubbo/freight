name: Build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches: ['**']
    tags: [v*]
  pull_request:
    branches: [main]
jobs:
  crate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add ${{ matrix.target }}
      - run: cargo check --target ${{ matrix.target }}
      - run: cargo test --target ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: freight-${{ github.ref_name }}-${{ matrix.target }}
          path: target/release/freight
      - run: cargo package --target ${{ matrix.target }}
      - run: cargo publish --target ${{ matrix.target }}
        if: github.ref_type == 'tag'
  image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  release:
    runs-on: ubuntu-latest
    needs: [crate, image]
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist/
      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: dist/*